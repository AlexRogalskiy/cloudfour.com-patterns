/** @define Thumbnail; weak */

/**
 * Variables
 */

:root {
  --Thumbnail-border-color: var(--color-navy);
  --Thumbnail-border-width: var(--control-stroke);
  --Thumbnail-rounded-radius: var(--control-radius);
  --Thumbnail-circle-img-width: 4em;
}

/**
 * Core component
 */

/**
 * 1. Allow children to position themselves absolutely.
 * 2. Mimic default display of img elements.
 * 3. Make sure images are clipped by rounded corners (if any).
 * 4. Removes extra space below img for certain vertical alignments. Preferable
 *    to setting display: block on img because it respects vertical-align rules
 *    on either this element or the img itself.
 */

.Thumbnail {
  position: relative; /* 1 */
  display: inline-block; /* 2 */
  overflow: hidden; /* 3 */
  line-height: 0; /* 4 */
}

/**
 * 1. Absolute position pseudo element.
 * 2. Fix to all edges (also matches parent dimensions).
 * 3. Makes pseudo element visible.
 * 4. Subtle inset border.
 * 5. Inherit rounded corners (if any) from parent.
 * 6. Animate border property changes.
 */

.Thumbnail::after {
  position: absolute; /* 1 */
  top: 0; /* 2 */
  right: 0; /* 2 */
  bottom: 0; /* 2 */
  left: 0; /* 2 */
  content: ""; /* 3 */
  border: var(--Thumbnail-border-width) solid color(var(--Thumbnail-border-color) a(10%)); /* 4 */
  border-radius: inherit; /* 5 */
  transition: border 300ms ease; /* 6 */
}

.Thumbnail:matches(:focus, :hover)::after {
  border-color: color(var(--Thumbnail-border-color) a(25%));
}

.Thumbnail:active::after {
  border-color: color(var(--Thumbnail-border-color) a(50%));
}

/**
 * Modifiers
 */

.Thumbnail--rounded {
  border-radius: var(--Thumbnail-rounded-radius);
}

.Thumbnail--circle {
  border-radius: 50%;
}

.Thumbnail--circle > img {
  width: var(--Thumbnail-circle-img-width);
  height: auto;
}
