/**
 * Input
 */

:root {
  --Input-background-color: var(--color-white);
  --Input-border-color: var(--color-gray);
  --Input-border-color-focus: var(--color-blue);
  --Input-border-radius: var(--control-radius);
  --Input-border-width: var(--control-stroke);
  --Input-color: var(--base-color);
  --Input-disabled-opacity: var(--control-disabled-opacity);
  --Input-padding: 0.5em 0.75em;
  --Input-transition-duration: var(--motion-duration-lg);
  --Input-transition-timing-function: var(--motion-timing-function-default);
}

/**
 * 1. Most occurrences of this benefit from occupying the full width.
 * 2. We aren't using a slightly more polished technique like text-indent due to
 *    cross-browser edge cases where the rule would be ignored or would conflict
 *    with platform-specific input type controls (search decorations, etc.).
 * 3. Same `line-height` as `.Button` for easy alignment.
 * 4. Unfortunately, Webkit won't play nice with our styles on some input types
 *    unless we override its appearance.
 */
@define-mixin Input {
  display: block; /* 1 */
  box-sizing: border-box;
  width: 100%; /* 1 */
  padding: var(--Input-padding);
  font: inherit; /* 2 */
  line-height: normal; /* 3 */
  color: var(--Input-color);
  border: var(--Input-border-width) solid var(--Input-border-color);
  border-radius: var(--Input-border-radius);
  background: var(--Input-background-color);
  transition: all var(--Input-transition-duration) var(--Input-transition-timing-function);
  -webkit-appearance: none; /* 4 */

  &:matches(:active, :hover) {
    border-color: color-mod(var(--Input-border-color) l(-15%));
  }

  &:matches(:disabled, .is-disabled) {
    color: color-mod(var(--Input-color) a(50%));
    border-color: var(--Input-border-color);
    background-color: color-mod(var(--Input-border-color) l(+5%));
  }

  &:focus {
    border-color: var(--Input-border-color-focus);
    outline: none;
  }
}

.Input {
  @mixin Input;
}

/**
 * Modifier: Dark backgrounds
 */

:root {
  --Input-dark-background-color: var(--color-blue);
  --Input-dark-border-color: color-mod(var(--Input-dark-background-color) l(+20%));
  --Input-dark-color: var(--color-white);
}

.Input--dark {
  background-color: var(--Input-dark-background-color);
  border-color: var(--Input-dark-border-color);
  color: var(--Input-dark-color);
}

.Input--dark:matches(:active, :hover) {
  border-color: color-mod(var(--Input-dark-border-color) l(+10%));
}

.Input--dark:matches(:disabled, .is-disabled) {
  color: color-mod(var(--Input-dark-color) a(50%));
  border-color: var(--Input-dark-border-color);
  background-color: color-mod(var(--Input-dark-border-color) l(-12%));
}

.Input--dark:focus {
  border-color: var(--color-white);
}
