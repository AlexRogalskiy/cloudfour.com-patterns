/**
 * Icon
 *
 * Inline SVG icon component. Use currentColor in SVGs themselves to control
 * which elements inherit color.
 */

:root {
  --Icon-line-height-offset: calc((var(--line-height) - 1) / -2em);
  --Icon-size-sm: 1em;
  --Icon-size-md: calc(var(--Icon-size-sm) * var(--ratio));
  --Icon-size-lg: calc(var(--Icon-size-md) * var(--ratio));
  --Icon-size-xl: calc(var(--Icon-size-lg) * var(--ratio));
}

/**
 * 1. Because vertical alignment is funny, icons always appear about a pixel too
 *    low when they're the same height as the current `font-size`. Using `top`
 *    frees up `margin-top` for adjustments we'll be applying to modifiers.
 * 2. Base dimensions on the current `font-size` for leaner adjustments.
 */
.Icon {
  position: relative;
  top: -1px; /* 1 */
  margin: 0;
  display: inline-block;
  width: 1em;
  height: 1em;
  font-size: var(--Icon-size-sm); /* 2 */
  vertical-align: middle;
}

/**
 * Modifiers should avoid disrupting their container where possible. Setting
 * negative values for both vertical margins makes sure this won't happen unless
 * the icon is actually too tall for the container rather than the container's
 * `line-height`.
 */

.Icon--md,
.Icon--lg,
.Icon--xl {
  margin-top: var(--Icon-line-height-offset);
  margin-bottom: var(--Icon-line-height-offset);
}

/**
 * Above a certain size, modifiers no longer need the top offset because the
 * dominant visual relationship at this point will be with the container rather
 * than the baseline.
 */

.Icon--lg,
.Icon--xl {
  top: 0;
}

/**
 * At this point, modifiers are defined with simple `font-size` adjustments.
 */

.Icon--md {
  font-size: var(--Icon-size-md);
}

.Icon--lg {
  font-size: var(--Icon-size-lg);
}

.Icon--xl {
  font-size: var(--Icon-size-xl);
}
