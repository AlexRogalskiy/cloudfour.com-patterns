/**
 * Icon
 *
 * Inline SVG icon component. Use currentColor in SVGs themselves to control
 * which elements inherit color.
 */

:root {
  --Icon-line-height-offset: calc((var(--line-height-md) - 1) / -2em);
  --Icon-size: 1em;
  --Icon-size-1: calc(var(--Icon-size) * var(--ms-ratio));
  --Icon-size-2: calc(var(--Icon-size-1) * var(--ms-ratio));
}

/**
 * 1. Base dimensions on the current `font-size` for leaner adjustments.
 * 2. Fill with the current text color by default. May be overridden by icon
 *    asset SVG attributes.
 */
.Icon {
  position: relative;
  margin: 0;
  display: inline-block;
  width: 1em;
  height: 1em;
  font-size: var(--Icon-size); /* 1 */
  vertical-align: middle;
  fill: currentColor; /* 2 */
}

/**
 * Because vertical alignment is funny, icons always appear about a pixel too
 * low when they're the same height as the current `font-size`. Using `top`
 * frees up `margin-top` for adjustments we'll be applying to modifiers.
 */

.Icon:not(.Icon--block) {
  top: -1px;
}

/**
 * Actual size adjustment occurs via `font-size`.
 */

.Icon--large {
  font-size: var(--Icon-size-1);
}

.Icon--larger {
  font-size: var(--Icon-size-2);
}

/**
 * Negative vertical margins prevent the icon from disrupting the surrounding
 * content's `line-height`.
 */

.Icon--large:not(.Icon--block),
.Icon--larger:not(.Icon--block) {
  margin-bottom: var(--Icon-line-height-offset); /* 1 */
  margin-top: var(--Icon-line-height-offset); /* 1 */
}
